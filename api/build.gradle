apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

ext.cdnEndpoint = ext.has("cdnEndpoint") ? ext.cdnEndpoint : "http://localhost/"
ext.apiEndpoint = ext.has("apiEndpoint") ? ext.apiEndpoint : "http://localhost/"

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        // encoded query string for public read access on the cdn
        buildConfigField "String", "CDN_QUERY_STRING", "\"sv=2019-02-02&st=2020-06-26T14%3A13%3A35Z&se=2025-06-27T14%3A13%3A00Z&sr=c&sp=rl&sig=fCwrecfbx6JNp5RlTzw5mmnRCna6hne92Khb8Gk4%2BRw%3D\""
        buildConfigField "String", "CDN_BASE_URL", "\"https://vwspa-cdn-blob.azureedge.net/vws/\""
        buildConfigField "String", "API_BASE_URL", "\"https://api-ota.alleensamenmelden.nl/mss-acc/\""
        buildConfigField "boolean", "FEATURE_RESPONSE_SIGNATURES", "true"
        buildConfigField "boolean", "FEATURE_ACCEPT_HEADER", "false"
        buildConfigField "boolean", "FEATURE_SSL_PINNING", "true"
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.all {
            // https://github.com/robolectric/robolectric/issues/5115
            systemProperty("javax.net.ssl.trustStoreType", "JKS")

            // https://github.com/robolectric/robolectric/issues/5456
            systemProperty("robolectric.dependency.repo.id", "central")
            systemProperty("robolectric.dependency.repo.url", "https://repo1.maven.org/maven2")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            // Uncomment to disable pinning for all debug variants
            // buildConfigField "boolean", "FEATURE_SSL_PINNING", "false"
        }
    }

    flavorDimensions "environment"

    productFlavors {
        dev {
            dimension "environment"
            buildConfigField "boolean", "FEATURE_RESPONSE_SIGNATURES", "false"
            buildConfigField "boolean", "FEATURE_ACCEPT_HEADER", "true"
            buildConfigField "boolean", "FEATURE_SSL_PINNING", "false"
            buildConfigField "String", "CDN_BASE_URL", "\"${cdnEndpoint}\""
            buildConfigField "String", "API_BASE_URL", "\"${apiEndpoint}\""
        }
        acc {
            dimension "environment"
        }
        prod {
            dimension "environment"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.okhttp3:okhttp:4.7.2'

    implementation 'com.squareup.retrofit2:converter-moshi:2.8.1'
    implementation ('com.squareup.moshi:moshi-kotlin:1.9.2') {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-reflect"
    }

    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.2'

    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation project(":signing")

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.7.2")
    testImplementation 'androidx.test:core:1.2.0'
}
